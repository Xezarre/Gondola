"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const html_builder_1=require("./html-builder"),types_1=require("./types");class GondolaReporter{constructor(e){this.config=e,this.suites=[],this.startTime=new Date,this.endTime=new Date,this.internalSuites={},this.internalSpecs={},this.fakeFocusedSuite={id:"focused",description:"focused specs",fullName:"focused specs"}}report(e){this.pushMsg({msg:e,type:types_1.MsgTypes.Text})}reportPic(e,t){let s;s="string"==typeof t?{"":t}:t,this.pushMsg({msg:e,type:types_1.MsgTypes.Picture,pic:s})}suiteStarted(e){const t=this.getSuite(e);t.startTime=new Date,t.type=types_1.TestTypes.Suite,t.specs=[],t.suites=[],t.items=[],t.failures=0,t.skipped=0,t.parent=this.currentSuite,this.currentSuite?(this.currentSuite.suites.push(t),this.currentSuite.items.push(t)):this.suites.push(t),this.currentSuite=t}specStarted(e){this.currentSuite||this.suiteStarted(this.fakeFocusedSuite);const t=this.getSpec(e,this.currentSuite);t.startTime=new Date,t.type=types_1.TestTypes.Spec,t.messages=[],this.currentSpec=t}specDone(e){this.getSpec(e,this.currentSuite).endTime=new Date,this.config&&(this.config.captureScreenOnPassed&&"passed"===e.status&&this.captureScreensot(e.id),this.config.captureScreenOnFailed&&"failed"===e.status&&this.captureScreensot(e.id)),this.currentSpec&&this.collectFailures(this.currentSpec,this.currentSpec),this.currentSpec=void 0}suiteDone(e){const t=this.getSuite(e);t.parent,t.endTime=new Date,this.currentSuite=t.parent}start(){this.startTime=new Date}done(){this.endTime=new Date;try{new html_builder_1.HTMLBuilder(this.config?this.config:{}).buildFrom(this)}catch(e){console.error(e.stack)}}startKeywordStep(e,t,s){this.currentSpec&&this.currentSpec.keywordSteps.push({args:s,id:e,keyword:t})}endKeywordStep(e,t,s){if(this.currentSpec&&this.currentSpec.keywordSteps.length>0){this.currentSpec.keywordSteps[this.currentSpec.keywordSteps.length-1].id===e&&this.currentSpec.keywordSteps.pop()}}getSuite(e){return this.internalSuites[e.id]||(this.internalSuites[e.id]=Object.assign({},e)),this.internalSuites[e.id]}getSpec(e,t){this.internalSpecs[e.id]?this.updateSpec(this.internalSpecs[e.id],e):this.internalSpecs[e.id]=Object.assign({},e);const s=this.internalSpecs[e.id];return t&&!s.parent&&(s.parent=t,t.specs.push(s),t.items.push(s)),s}updateSpec(e,t){e.status=t.status,e.err=t.err}pushMsg(e){this.currentSpec&&(this.collectFailures(this.currentSpec,this.currentSpec),this.currentSpec.messages.push(e))}collectKeywordStep(e){let t="";for(const s of e.keywordSteps)t=` ${s.keyword}: ${JSON.stringify(s.args)} \r\n`+t;return t}collectFailures(e,t){const s=this.collectKeywordStep(e);if(t.err){let i;0===e.messages.length?(i={msg:"__init__",status:types_1.Status.Unkown,type:types_1.MsgTypes.Text},e.messages.push(i)):i=e.messages[e.messages.length-1],i.failDetail=[t.err,{message:"keyword steps",stack:s}],i.status=types_1.Status.Fail}}captureScreensot(e){}}exports.GondolaReporter=GondolaReporter;
//# sourceMappingURL=../../debug/reporter/gondola-reporter.js.map
