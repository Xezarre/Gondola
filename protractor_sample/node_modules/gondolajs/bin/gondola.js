#!/usr/bin/env node
const requireg=require("requireg"),output=require("codeceptjs/lib/output"),readFileSync=require("fs").readFileSync,step=require("codeceptjs/lib/step"),event=require("codeceptjs").event,path=require("path"),childProcess=require("child_process");step.prototype.toString=function(){return this.actor="gondola",`${this.prefix}${this.actor} ${this.humanize()} ${this.humanizeArgs()}${this.suffix}`};const oldPrint=output.print;output.print=function(...e){let o=[];e.forEach(e=>{if(0===e.indexOf("CodeceptJS v")){e=`Gondola v${JSON.parse(readFileSync(`${__dirname}/../package.json`,"utf8")).version}`}o.push(e)}),oldPrint(...o)},process.argv.length<=2&&console.log("!!!Welcome to Gondola!!!");let argv=process.argv,serverInfo="";if(argv.includes("--licenseServer")){const e=argv.indexOf("--licenseServer");e+1<argv.length?(serverInfo=argv[e+1],argv.splice(e,2)):(console.log("[31m%s[0m","Value for require argument cannot be empty."),process.exit())}argv.includes("-c")||argv.includes("--config")||(argv.push("-c"),argv.push("gondola.json")),argv.includes("-R")||argv.includes("--reporter")||(console.log("add report default"),argv.push("--reporter"),argv.push("./node_modules/gondolajs/built/reporter/mocha-report-hook"));const stopLicense="stop",fork=childProcess.fork(path.join(__dirname,"check-license.js"),{detached:!0,env:{info:serverInfo},execArgv:[]});function stopChildProcess(){!0!==fork.killed&&!1!==fork.connected&&fork.send(stopLicense)}process.on("exit",()=>{stopChildProcess()}),fork.on("message",e=>{if(0===e.licenseState){console.log("[32m%s[0m","Connected to License Server successfully."),event.dispatcher.on(event.all.after,function(){stopChildProcess()}),event.dispatcher.on(event.multiple.after,function(){stopChildProcess()});requireg("codeceptjs/bin/codecept")}else{switch(e.licenseState){case-2:console.log("[31m%s[0m","Missed require arguments: --licenseServer");break;case 1:case 3:console.log("[31m%s[0m","Cannot connect to License Server. Please verify the machine name and port number.");break;case 2:console.log("[31m%s[0m","Cannot validate your Gondola license. Please contact your License Server administrator or direct to https://docs.gondolatest.com to learn more.");break;case 4:console.log("[31m%s[0m","The max number of users has been reached. Please contact your License Server administrator to purchase more licenses.");break;default:console.log("[31m%s[0m","Failed to connect to License Server.")}process.exit()}});